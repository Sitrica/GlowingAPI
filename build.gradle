import org.apache.tools.ant.filters.ReplaceTokens
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'eclipse'

jar.archiveName = project.name + '.jar'

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
	mavenCentral()
	jcenter()

	// Spigot
	maven {
		url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	}

	// Bungeecord
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}

	// ProtocolLib
	maven {
		url "http://repo.dmulloy2.net/nexus/repository/public"
	}

}

dependencies {

	// Nullable annotation
	implementation (group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.annotation', version: '2.2.600')

	// Spigot
	implementation (group: 'org.spigotmc', name: 'spigot-api', version: '1.16.2-R0.1-SNAPSHOT')

	// ProtocolLib
	implementation (group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.5.1");

}

publishing {
	repositories {
		maven {
			name = project.name
			url = uri("https://maven.pkg.github.com/Sitrica/" + project.name)
			credentials {
				username = 'Sitrica'
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_PACKAGES_KEY")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			version = project.property("version")
			groupId = 'com.sitrica'
			artifactId = project.name
			from(components.java)
		}
	}
}

processResources {
	from (sourceSets.main.resources.srcDirs) {
		filter ReplaceTokens, tokens: ["version": project.property("version")]
		include '**/*.yml'
	}
}

jar {
	configurations.shade.each { dep ->
		from (project.zipTree(dep)) {
			exclude '**/*.php'
			exclude '**/*.yml'
			exclude 'META-INF', 'META-INF/**'
		}
	}
}
